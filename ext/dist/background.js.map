{"version":3,"file":"background.js","sources":["webpack://my-webpack-project/./src/background.ts"],"sourcesContent":["// import Protocol from './protocol'\n// import { Device, ButtonCommand } from './constants'\n// const connection = {\n//   buffer: new Uint8Array([0b00000001, 0xff, 0b00000110, 0x01, 0x02]),\n//   cursor: 0,\n//   read: function (length: number): Promise<Uint8Array> {\n//     const result = connection.buffer.slice(\n//       connection.cursor,\n//       connection.cursor + length\n//     )\n//     connection.cursor += length\n//     connection.cursor %= connection.buffer.length\n//     return new Promise((resolve) => {\n//       setTimeout(resolve.bind(null, [result]), 1000)\n//     })\n//     // return Promise.resolve(result)\n//   },\n// }\n// const protoReader = new Protocol(connection)\n// globalThis['foo'] = protoReader\n// protoReader.start((cmd) => {\n//   switch (cmd.device) {\n//     case Device.Button1:\n//       switch (cmd.commandId) {\n//         case ButtonCommand.Press:\n//           console.log('Button 1 Pressed')\n//           handleCommand('toggle_mute')\n//           break\n//         case ButtonCommand.Down:\n//           console.log('Button 1 Down')\n//           handleCommand('toggle_mute')\n//           break\n//         case ButtonCommand.Up:\n//           console.log('Button 1 Up')\n//           handleCommand('toggle_mute')\n//           break\n//         default:\n//           console.log('Button 1 unknown command', { command: cmd })\n//           break\n//       }\n//       break\n//     default:\n//       console.log('Unknown device', { command: cmd })\n//       break\n//   }\n// })\nchrome.runtime.onMessage.addListener(function (message) {\n    console.log(message);\n    switch (message.event) {\n        case 'connected':\n            break;\n        case 'disconnected':\n            break;\n        case 'muted':\n            break;\n        case 'unmuted':\n            break;\n    }\n});\nfunction handleCommand(command) {\n    chrome.windows.getAll({ populate: true }, function (windowList) {\n        var googleMeetTabs = getGoogleMeetTabs(windowList);\n        if (googleMeetTabs.length > 0) {\n            processCommand(command, googleMeetTabs);\n        }\n    });\n}\nfunction getGoogleMeetTabs(windowList) {\n    var googleMeetTabs = [];\n    windowList.forEach(function (w) {\n        w.tabs.forEach(function (tab) {\n            if (tab && tab.url && tab.url.startsWith('https://meet.google.com/')) {\n                googleMeetTabs.push(tab);\n            }\n        });\n    });\n    return googleMeetTabs;\n}\nfunction processCommand(command, googleMeetTabs) {\n    googleMeetTabs.forEach(function (tab) {\n        chrome.tabs.sendMessage(tab.id, { command: command });\n    });\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}